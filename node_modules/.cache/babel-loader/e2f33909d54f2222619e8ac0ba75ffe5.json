{"ast":null,"code":"import { SET_SCREAMS, LIKE_SCREAM, UNLIKE_SCREAM, LOADING_DATA, DELETE_SCREAM, POST_SCREAM, SET_SCREAM, SUBMIT_COMMENT } from '../types';\nconst initialState = {\n  screams: [],\n  scream: {},\n  loading: false\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case LOADING_DATA:\n      return { ...state,\n        loading: true\n      };\n\n    case SET_SCREAMS:\n      return { ...state,\n        screams: action.payload,\n        loading: false\n      };\n\n    case SET_SCREAM:\n      return { ...state,\n        scream: action.payload\n      };\n\n    case LIKE_SCREAM:\n    case UNLIKE_SCREAM:\n      //create a var to get the index of that scream\n      let index = state.screams.findIndex(scream => scream.screamId === action.payload.screamId); //once you have the index scream, replace the action payload with it\n\n      state.screams[index] = action.payload;\n\n      if (state.scream.screamId === action.payload.screamId) {\n        state.scream = action.payload;\n      }\n\n      return { ...state\n      };\n\n    case DELETE_SCREAM:\n      index = state.screams.findIndex(scream => scream.screamId === action.payload);\n      state.screams.splice(index, 1);\n      return { ...state\n      };\n\n    case POST_SCREAM:\n      return { ...state,\n        screams: [action.payload, ...state.screams]\n      };\n\n    case SUBMIT_COMMENT:\n      return { ...state,\n        scream: { ...state.scream,\n          comments: [action.payload, ...state.scream.comments]\n        }\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/Mama/Desktop/pizza-app/src/Redux/reducers/dataReducer.js"],"names":["SET_SCREAMS","LIKE_SCREAM","UNLIKE_SCREAM","LOADING_DATA","DELETE_SCREAM","POST_SCREAM","SET_SCREAM","SUBMIT_COMMENT","initialState","screams","scream","loading","state","action","type","payload","index","findIndex","screamId","splice","comments"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,WAAtB,EAAmCC,aAAnC,EAAkDC,YAAlD,EACIC,aADJ,EACmBC,WADnB,EACgCC,UADhC,EAC4CC,cAD5C,QACkE,UADlE;AAGE,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,EADU;AAEnBC,EAAAA,MAAM,EAAE,EAFW;AAGnBC,EAAAA,OAAO,EAAE;AAHU,CAArB;AAMA,eAAe,UAASC,KAAK,GAAGJ,YAAjB,EAA+BK,MAA/B,EAAuC;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKX,YAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELD,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAIF,SAAKX,WAAL;AACE,aAAO,EACL,GAAGY,KADE;AAELH,QAAAA,OAAO,EAAEI,MAAM,CAACE,OAFX;AAGLJ,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKL,UAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELF,QAAAA,MAAM,EAAEG,MAAM,CAACE;AAFV,OAAP;;AAIF,SAAKd,WAAL;AACA,SAAKC,aAAL;AACE;AACA,UAAIc,KAAK,GAAGJ,KAAK,CAACH,OAAN,CAAcQ,SAAd,CACTP,MAAD,IAAYA,MAAM,CAACQ,QAAP,KAAoBL,MAAM,CAACE,OAAP,CAAeG,QADrC,CAAZ,CAFF,CAKE;;AACAN,MAAAA,KAAK,CAACH,OAAN,CAAcO,KAAd,IAAuBH,MAAM,CAACE,OAA9B;;AAEA,UAAIH,KAAK,CAACF,MAAN,CAAaQ,QAAb,KAA0BL,MAAM,CAACE,OAAP,CAAeG,QAA7C,EAAuD;AACrDN,QAAAA,KAAK,CAACF,MAAN,GAAeG,MAAM,CAACE,OAAtB;AACD;;AACD,aAAO,EACL,GAAGH;AADE,OAAP;;AAGF,SAAKR,aAAL;AACEY,MAAAA,KAAK,GAAGJ,KAAK,CAACH,OAAN,CAAcQ,SAAd,CACLP,MAAD,IAAYA,MAAM,CAACQ,QAAP,KAAoBL,MAAM,CAACE,OADjC,CAAR;AAGAH,MAAAA,KAAK,CAACH,OAAN,CAAcU,MAAd,CAAqBH,KAArB,EAA4B,CAA5B;AACA,aAAO,EACL,GAAGJ;AADE,OAAP;;AAGF,SAAKP,WAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELH,QAAAA,OAAO,EAAE,CAACI,MAAM,CAACE,OAAR,EAAiB,GAAGH,KAAK,CAACH,OAA1B;AAFJ,OAAP;;AAIF,SAAKF,cAAL;AACE,aAAO,EACL,GAAGK,KADE;AAELF,QAAAA,MAAM,EAAE,EACN,GAAGE,KAAK,CAACF,MADH;AAENU,UAAAA,QAAQ,EAAE,CAACP,MAAM,CAACE,OAAR,EAAiB,GAAGH,KAAK,CAACF,MAAN,CAAaU,QAAjC;AAFJ;AAFH,OAAP;;AAOF;AACE,aAAOR,KAAP;AAtDJ;AAwDD","sourcesContent":["import { SET_SCREAMS, LIKE_SCREAM, UNLIKE_SCREAM, LOADING_DATA,\n    DELETE_SCREAM, POST_SCREAM, SET_SCREAM, SUBMIT_COMMENT } from '../types';\n  \n  const initialState = {\n    screams: [],\n    scream: {},\n    loading: false\n  };\n  \n  export default function(state = initialState, action) {\n    switch (action.type) {\n      case LOADING_DATA:\n        return {\n          ...state,\n          loading: true\n        };\n      case SET_SCREAMS:\n        return {\n          ...state,\n          screams: action.payload,\n          loading: false\n        };\n      case SET_SCREAM:\n        return {\n          ...state,\n          scream: action.payload\n        };\n      case LIKE_SCREAM:\n      case UNLIKE_SCREAM:\n        //create a var to get the index of that scream\n        let index = state.screams.findIndex(\n          (scream) => scream.screamId === action.payload.screamId\n        );\n        //once you have the index scream, replace the action payload with it\n        state.screams[index] = action.payload;\n        \n        if (state.scream.screamId === action.payload.screamId) {\n          state.scream = action.payload;\n        }\n        return {\n          ...state\n        };\n      case DELETE_SCREAM:\n        index = state.screams.findIndex(\n          (scream) => scream.screamId === action.payload\n        );\n        state.screams.splice(index, 1);\n        return {\n          ...state\n        };\n      case POST_SCREAM:\n        return {\n          ...state,\n          screams: [action.payload, ...state.screams]\n        };\n      case SUBMIT_COMMENT:\n        return {\n          ...state,\n          scream: {\n            ...state.scream,\n            comments: [action.payload, ...state.scream.comments]\n          }\n        };\n      default:\n        return state;\n    }\n  }"]},"metadata":{},"sourceType":"module"}