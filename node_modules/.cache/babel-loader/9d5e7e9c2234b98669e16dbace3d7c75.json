{"ast":null,"code":"var _jsxFileName = \"/Users/Mama/Desktop/pizza-app/src/Pages/login.js\";\nimport React, { Component } from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport PropTypes from 'prop-types';\nimport Icon from '../Images/no-img.png';\nimport axios from 'axios';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from \"@material-ui/core/Button\";\nimport { Link } from 'react-router-dom';\nimport CircularProgress from '@material-ui/core/CircularProgress'; //import theme class from app.js page\n\nconst styles = {\n  form: {\n    textAlign: 'center'\n  },\n  logoImg: {\n    width: 'auto',\n    height: '4rem',\n    margin: '20px auto 20px auto'\n  },\n  pageTitle: {\n    margin: '10px auto 10px auto'\n  },\n  textField: {\n    margin: '10px auto 10px auto'\n  },\n  button: {\n    marginTop: '1rem',\n    position: 'relative'\n  },\n  customError: {\n    color: 'red',\n    fontSize: '0.8rem',\n    marginTop: '1rem'\n  },\n  progress: {\n    position: 'absolute'\n  }\n};\n\nclass Login extends Component {\n  //controled component\n  constructor() {\n    super();\n\n    this.handleSubmit = event => {\n      //prevent user from submitting empty values\n      event.preventDefault(); //while everything is processing show loading\n\n      this.setState({\n        loading: true\n      }); //Get data before submitting\n\n      const userData = {\n        email: this.state.email,\n        password: this.state.password\n      };\n      axios.post('/login', userData).then(res => {\n        //if successful\n        console.log(res.data); //store token locally\n\n        localStorage.setItem('FBIdToken', `Bearer ${res.data.token}`); //set loading screen to false\n\n        this.setState({\n          loading: false\n        }); //send users to homepage\n\n        this.props.history.push('/');\n      }).catch(err => {\n        //if errors, log error and set loading to false\n        this.setState({\n          errors: err.response.data,\n          loading: false\n        });\n      });\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.state = {\n      email: '',\n      password: '',\n      loading: false,\n      errors: {}\n    };\n  } //func to handle once user clicks submit\n\n\n  render() {\n    //import classes\n    const classes = this.props;\n    const {\n      errors,\n      loading\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      className: classes.form,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      sm: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      sm: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: Icon,\n      alt: \"NewUser\",\n      className: classes.logoImg,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h2\",\n      className: classes.pageTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }\n    }, \"Login\"), /*#__PURE__*/React.createElement(\"form\", {\n      noValidate: true,\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"email\",\n      name: \"email\",\n      type: \"email\",\n      label: \"Email\",\n      className: classes.textField,\n      helperText: errors.email,\n      error: errors.email ? true : false,\n      value: this.state.email,\n      onChange: this.handleChange,\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      id: \"password\",\n      name: \"password\",\n      type: \"password\",\n      label: \"Password\",\n      className: classes.textField,\n      helperText: errors.password,\n      error: errors.password ? true : false,\n      value: this.state.password,\n      onChange: this.handleChange,\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 25\n      }\n    }), errors.general && /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h2\",\n      className: classes.customError,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 29\n      }\n    }, errors.general), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      variant: \"contained\",\n      color: \"primary\",\n      className: classes.button //Disable button when loading\n      ,\n      disabled: loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 25\n      }\n    }, \"Login\", loading && /*#__PURE__*/React.createElement(CircularProgress, {\n      size: 30,\n      className: classes.progress,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 34\n      }\n    }), /*#__PURE__*/React.createElement(\"small\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 39\n      }\n    }, \"Dont have an account? Sign up \", /*#__PURE__*/React.createElement(Link, {\n      to: \"/signup\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 76\n      }\n    }, \"here\")))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      sm: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nLogin.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(Login);","map":{"version":3,"sources":["/Users/Mama/Desktop/pizza-app/src/Pages/login.js"],"names":["React","Component","withStyles","PropTypes","Icon","axios","Grid","Typography","TextField","Button","Link","CircularProgress","styles","form","textAlign","logoImg","width","height","margin","pageTitle","textField","button","marginTop","position","customError","color","fontSize","progress","Login","constructor","handleSubmit","event","preventDefault","setState","loading","userData","email","state","password","post","then","res","console","log","data","localStorage","setItem","token","props","history","push","catch","err","errors","response","handleChange","target","name","value","render","classes","general","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport PropTypes from 'prop-types';\nimport Icon from '../Images/no-img.png';\nimport axios from 'axios';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from \"@material-ui/core/Button\";\nimport { Link } from 'react-router-dom';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n//import theme class from app.js page\nconst styles = {\n    form: {\n        textAlign: 'center'\n      },\n      logoImg: {\n          width: 'auto',\n          height: '4rem',\n          margin: '20px auto 20px auto'\n      },\n      pageTitle: {\n          margin: '10px auto 10px auto'\n      },\n      textField: {\n          margin: '10px auto 10px auto'\n      },\n      button: {\n          marginTop: '1rem',\n          position: 'relative'\n      },\n      customError: {\n          color: 'red',\n          fontSize: '0.8rem',\n          marginTop: '1rem'\n      },\n      progress: {\n          position: 'absolute'\n      }\n};\n\n\nclass Login extends Component {\n    //controled component\n    constructor() {\n        super();\n        this.state = {\n            email: '',\n            password: '',\n            loading: false,\n            errors: {}\n        };\n    }\n\n    //func to handle once user clicks submit\n    handleSubmit = (event) => {\n        //prevent user from submitting empty values\n        event.preventDefault();\n        //while everything is processing show loading\n        this.setState({\n            loading: true\n        });\n\n        //Get data before submitting\n        const userData = {\n            email: this.state.email,\n            password: this.state.password\n        }\n\n        axios.post('/login', userData)\n            .then(res => {\n                //if successful\n                console.log(res.data);\n                //store token locally\n                localStorage.setItem('FBIdToken', `Bearer ${res.data.token}`);\n                //set loading screen to false\n                this.setState({\n                    loading: false\n                });\n                //send users to homepage\n                this.props.history.push('/');\n            })\n            .catch(err => {\n                //if errors, log error and set loading to false\n                this.setState({\n                    errors: err.response.data,\n                    loading: false\n                });\n            });\n    };\n\n    //func to handleChnage in Textfields and get user input\n    handleChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    };\n\n\n    render() {\n        //import classes\n        const classes = this.props;\n        const { errors, loading } = this.state;\n\n        return (\n            <Grid container className={classes.form}>\n                <Grid item sm/>\n                <Grid item sm>\n                    <img src={Icon} alt=\"NewUser\" className={classes.logoImg}/>\n                    <Typography variant=\"h2\" className={classes.pageTitle}>Login</Typography>\n                    <form noValidate onSubmit={this.handleSubmit} >\n                        <TextField \n                            id=\"email\"\n                            name=\"email\"\n                            type=\"email\"\n                            label=\"Email\"\n                            className={classes.textField}\n                            helperText={errors.email}\n                            error={errors.email ? true : false}\n                            value={this.state.email}\n                            onChange={this.handleChange}\n                            fullWidth \n                        />\n                        <TextField \n                            id=\"password\" \n                            name=\"password\" \n                            type=\"password\" \n                            label=\"Password\" \n                            className={classes.textField}\n                            helperText={errors.password}\n                            error={errors.password ? true : false}\n                            value={this.state.password} \n                            onChange={this.handleChange} \n                            fullWidth \n                        />\n                        {errors.general && (\n                            <Typography variant=\"h2\" className={classes.customError}>\n                                {errors.general}\n                            </Typography>\n                        )}\n                        <Button \n                            type=\"submit\" \n                            variant=\"contained\" \n                            color=\"primary\" \n                            className={classes.button}\n                            //Disable button when loading\n                            disabled={loading}\n                        >\n                            Login\n                            {/* Will show a loading circle after user clicks login btn */}\n                            {loading && (\n                                <CircularProgress size={30} className={classes.progress}/>\n                            )}\n                        </Button>\n                            {/* Text that will redirect user to creat a new account(signup) */}\n                            <br/><br/><small>Dont have an account? Sign up <Link to=\"/signup\">here</Link></small>\n\n                    </form> \n                </Grid>\n                <Grid item sm/> \n            </Grid>\n        )\n    }\n}\n\nLogin.propTypes = {\n    classes: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles)(Login);"]},"metadata":{},"sourceType":"module"}