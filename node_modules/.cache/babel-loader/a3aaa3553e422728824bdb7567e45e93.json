{"ast":null,"code":"var _jsxFileName = \"/Users/Mama/Desktop/pizza-app/src/Pages/signup.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Icon from '../Images/no-img.png';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport themeObject from '../Util/theme'; //MUI Stuff\n\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from \"@material-ui/core/Button\";\nimport CircularProgress from '@material-ui/core/CircularProgress'; //Redux\n//import theme class from app.js page\n\nconst styles = {\n  form: themeObject.form,\n  logoImg: themeObject.image,\n  pageTitle: themeObject.pageTitle,\n  textField: themeObject.textField,\n  button: themeObject.button,\n  customError: themeObject.customError,\n  progress: themeObject.progress\n};\n\nclass signup extends Component {\n  //controled component\n  constructor() {\n    super();\n\n    this.handleSubmit = event => {\n      //prevent user from submitting empty values\n      event.preventDefault(); //while everything is processing show loading\n\n      this.setState({\n        loading: true\n      }); //Get data before submitting\n\n      const newUserData = {\n        email: this.state.email,\n        password: this.state.password,\n        confirmPassword: this.state.confirmPassword,\n        userName: this.state.userName\n      };\n      axios.post('/login', userData).then(res => {\n        //if successful\n        console.log(res.data); //store token locally\n\n        localStorage.setItem('FBIdToken', `Bearer ${res.data.token}`); //set loading screen to false\n\n        this.setState({\n          loading: false\n        }); //send users to homepage\n\n        this.props.history.push('/');\n      }).catch(err => {\n        //if errors, log error and set loading to false\n        this.setState({\n          errors: err.response.data,\n          loading: false\n        });\n      });\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.state = {\n      email: '',\n      password: '',\n      loading: false,\n      errors: {}\n    };\n  } //func to handle once user clicks submit\n\n\n  render() {\n    //import classes\n    const {\n      classes\n    } = this.props;\n    const {\n      errors,\n      loading\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      className: classes.form,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      sm: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      sm: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: Icon,\n      alt: \"NewUser\",\n      className: classes.logoImg,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h2\",\n      className: classes.pageTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }\n    }, \"Login\"), /*#__PURE__*/React.createElement(\"form\", {\n      noValidate: true,\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"email\",\n      name: \"email\",\n      type: \"email\",\n      label: \"Email\",\n      className: classes.textField,\n      helperText: errors.email,\n      error: errors.email ? true : false,\n      value: this.state.email,\n      onChange: this.handleChange,\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      id: \"password\",\n      name: \"password\",\n      type: \"password\",\n      label: \"Password\",\n      className: classes.textField,\n      helperText: errors.password,\n      error: errors.password ? true : false,\n      value: this.state.password,\n      onChange: this.handleChange,\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 25\n      }\n    }), errors.general && /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h2\",\n      className: classes.customError,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 29\n      }\n    }, errors.general), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      variant: \"contained\",\n      color: \"primary\",\n      className: classes.button //Disable button when loading\n      ,\n      disabled: loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 25\n      }\n    }, \"Login\", loading && /*#__PURE__*/React.createElement(CircularProgress, {\n      size: 30,\n      className: classes.progress,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 34\n      }\n    }), /*#__PURE__*/React.createElement(\"small\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 39\n      }\n    }, \"Dont have an account? Sign up \", /*#__PURE__*/React.createElement(Link, {\n      to: \"/signup\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 76\n      }\n    }, \"here\")))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      sm: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nsignup.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(signup);","map":{"version":3,"sources":["/Users/Mama/Desktop/pizza-app/src/Pages/signup.js"],"names":["React","Component","PropTypes","Icon","axios","Link","themeObject","withStyles","Grid","Typography","TextField","Button","CircularProgress","styles","form","logoImg","image","pageTitle","textField","button","customError","progress","signup","constructor","handleSubmit","event","preventDefault","setState","loading","newUserData","email","state","password","confirmPassword","userName","post","userData","then","res","console","log","data","localStorage","setItem","token","props","history","push","catch","err","errors","response","handleChange","target","name","value","render","classes","general","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Icon from '../Images/no-img.png';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport themeObject from '../Util/theme';\n\n//MUI Stuff\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from \"@material-ui/core/Button\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n//Redux\n\n\n//import theme class from app.js page\nconst styles = {\n    form: themeObject.form,\n    logoImg: themeObject.image,\n    pageTitle: themeObject.pageTitle,\n    textField: themeObject.textField,\n    button: themeObject.button,\n    customError: themeObject.customError,\n    progress: themeObject.progress\n};\n\nclass signup extends Component {\n    //controled component\n    constructor() {\n        super();\n        this.state = {\n            email: '',\n            password: '',\n            loading: false,\n            errors: {}\n        };\n    }\n\n    //func to handle once user clicks submit\n    handleSubmit = (event) => {\n        //prevent user from submitting empty values\n        event.preventDefault();\n        //while everything is processing show loading\n        this.setState({\n            loading: true\n        });\n\n        //Get data before submitting\n        const newUserData = {\n            email: this.state.email,\n            password: this.state.password,\n            confirmPassword: this.state.confirmPassword,\n            userName: this.state.userName\n        }\n\n        axios.post('/login', userData)\n            .then(res => {\n                //if successful\n                console.log(res.data);\n                //store token locally\n                localStorage.setItem('FBIdToken', `Bearer ${res.data.token}`);\n                //set loading screen to false\n                this.setState({\n                    loading: false\n                });\n                //send users to homepage\n                this.props.history.push('/');\n            })\n            .catch(err => {\n                //if errors, log error and set loading to false\n                this.setState({\n                    errors: err.response.data,\n                    loading: false\n                });\n            });\n    };\n\n    //func to handleChnage in Textfields and get user input\n    handleChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    };\n\n\n    render() {\n        //import classes\n        const { classes } = this.props;\n        const { errors, loading } = this.state;\n\n        return (\n            <Grid container className={classes.form}>\n                <Grid item sm/>\n                <Grid item sm>\n                    <img src={Icon} alt=\"NewUser\" className={classes.logoImg}/>\n                    <Typography variant=\"h2\" className={classes.pageTitle}>Login</Typography>\n                    <form noValidate onSubmit={this.handleSubmit} >\n                        <TextField \n                            id=\"email\"\n                            name=\"email\"\n                            type=\"email\"\n                            label=\"Email\"\n                            className={classes.textField}\n                            helperText={errors.email}\n                            error={errors.email ? true : false}\n                            value={this.state.email}\n                            onChange={this.handleChange}\n                            fullWidth \n                        />\n                        <TextField \n                            id=\"password\" \n                            name=\"password\" \n                            type=\"password\" \n                            label=\"Password\" \n                            className={classes.textField}\n                            helperText={errors.password}\n                            error={errors.password ? true : false}\n                            value={this.state.password} \n                            onChange={this.handleChange} \n                            fullWidth \n                        />\n                        {errors.general && (\n                            <Typography variant=\"h2\" className={classes.customError}>\n                                {errors.general}\n                            </Typography>\n                        )}\n                        <Button \n                            type=\"submit\" \n                            variant=\"contained\" \n                            color=\"primary\" \n                            className={classes.button}\n                            //Disable button when loading\n                            disabled={loading}\n                        >\n                            Login\n                            {/* Will show a loading circle after user clicks login btn */}\n                            {loading && (\n                                <CircularProgress size={30} className={classes.progress}/>\n                            )}\n                        </Button>\n                            {/* Text that will redirect user to creat a new account(signup) */}\n                            <br/><br/><small>Dont have an account? Sign up <Link to=\"/signup\">here</Link></small>\n\n                    </form> \n                </Grid>\n                <Grid item sm/> \n            </Grid>\n        )\n    }\n}\n\nsignup.propTypes = {\n    classes: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles)(signup);\n"]},"metadata":{},"sourceType":"module"}