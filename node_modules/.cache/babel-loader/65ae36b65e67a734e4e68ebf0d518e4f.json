{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk'; //import reducers\n\nimport userReducer from './reducers/userReducer';\nimport dataReducer from './reducers/dataReducer';\nimport uiReducer from './reducers/uiReducer'; //create empty object\n\nconst initialState = {}; //create array of thunk type\n\nconst middleware = [thunk]; //func to combine reducer var into one object\n\nconst reducers = combineReducers({\n  user: userReducer,\n  data: dataReducer,\n  UI: uiReducer\n});\nconst composeEnhancers = typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({}) : compose; //create enhancer\n\nconst enhancer = composeEnhancers(applyMiddleware(...middleware)); //create store\n\nconst store = createStore(reducers, initialState, enhancer);\nexport default store;","map":{"version":3,"sources":["/Users/Mama/Desktop/fakeTwitter/src/Redux/store.js"],"names":["createStore","combineReducers","applyMiddleware","compose","thunk","userReducer","dataReducer","uiReducer","initialState","middleware","reducers","user","data","UI","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","enhancer","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,EAAwDC,OAAxD,QAAuE,OAAvE;AACA,OAAOC,KAAP,MAAkB,aAAlB,C,CAEA;;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,OAAOC,SAAP,MAAsB,sBAAtB,C,CAEA;;AACA,MAAMC,YAAY,GAAG,EAArB,C,CAEA;;AACA,MAAMC,UAAU,GAAG,CAACL,KAAD,CAAnB,C,CAEA;;AACA,MAAMM,QAAQ,GAAGT,eAAe,CAAC;AAC/BU,EAAAA,IAAI,EAAEN,WADyB;AAE/BO,EAAAA,IAAI,EAAEN,WAFyB;AAG/BO,EAAAA,EAAE,EAAEN;AAH2B,CAAD,CAAhC;AAOA,MAAMO,gBAAgB,GACpB,OAAOC,MAAP,KAAkB,QAAlB,IAA8BA,MAAM,CAACC,oCAArC,GACID,MAAM,CAACC,oCAAP,CAA4C,EAA5C,CADJ,GAEIb,OAHN,C,CAKA;;AACA,MAAMc,QAAQ,GAAGH,gBAAgB,CAACZ,eAAe,CAAC,GAAGO,UAAJ,CAAhB,CAAjC,C,CAEA;;AACA,MAAMS,KAAK,GAAGlB,WAAW,CAACU,QAAD,EAAWF,YAAX,EAAyBS,QAAzB,CAAzB;AAEA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\n\n//import reducers\nimport userReducer from './reducers/userReducer';\nimport dataReducer from './reducers/dataReducer';\nimport uiReducer from './reducers/uiReducer';\n\n//create empty object\nconst initialState = {};\n\n//create array of thunk type\nconst middleware = [thunk];\n\n//func to combine reducer var into one object\nconst reducers = combineReducers({\n  user: userReducer,\n  data: dataReducer,\n  UI: uiReducer\n});\n\n\nconst composeEnhancers =\n  typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\n    : compose;\n\n//create enhancer\nconst enhancer = composeEnhancers(applyMiddleware(...middleware));\n\n//create store\nconst store = createStore(reducers, initialState, enhancer);\n\nexport default store;"]},"metadata":{},"sourceType":"module"}