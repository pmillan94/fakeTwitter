{"ast":null,"code":"//import types of actions\nimport { SET_USER, SET_ERRORS, CLEAR_ERRORS, LOADING_UI, SET_UNAUTHENTICATED, LOADING_USER, MARK_NOTIFICATIONS_READ } from '../types';\nimport axios from 'axios'; //func to loginUser\n\nexport const loginUser = (userData, history) => dispatch => {\n  //dispatch loading, (send and action)\n  dispatch({\n    type: LOADING_UI\n  });\n  axios.post('/login', userData).then(res => {\n    //if successful, set Auth Header\n    setAuthorizationHeader(res.data.token); //getUser\n\n    dispatch(getUserData()); //clear any errors in form\n\n    dispatch({\n      type: CLEAR_ERRORS\n    }); //redirect user to home page\n\n    history.push('/');\n  }).catch(err => {\n    //if errors, log error and set loading to false\n    dispatch({\n      type: SET_ERRORS,\n      payload: err.response.data\n    });\n  });\n}; //func to signUp\n\nexport const signupUser = (newUserData, history) => dispatch => {\n  dispatch({\n    type: LOADING_UI\n  });\n  axios.post('/signup', newUserData).then(res => {\n    //authorize user, passing the token\n    setAuthorizationHeader(res.data.token);\n    dispatch(getUserData());\n    dispatch({\n      type: CLEAR_ERRORS\n    });\n    history.push('/');\n  }).catch(err => {\n    dispatch({\n      type: SET_ERRORS,\n      payload: err.response.data\n    });\n  });\n}; //func to logout\n\nexport const logoutUser = () => dispatch => {\n  //delete token\n  localStorage.removeItem('FBIdToken'); //delete header\n\n  delete axios.defaults.headers.common['Authorization']; //set action to unauthenticated\n\n  dispatch({\n    type: SET_UNAUTHENTICATED\n  });\n}; //func to getUserData\n\nexport const getUserData = () => dispatch => {\n  //set action to loading\n  dispatch({\n    type: LOADING_USER\n  }); //trigger axios\n\n  axios.get('/user').then(res => {\n    dispatch({\n      type: SET_USER,\n      //data sent to reducer\n      payload: res.data\n    });\n  }).catch(err => console.log(err));\n}; //func to upload image\n\nexport const uploadImage = formData => dispatch => {\n  //dispatch action of type \n  dispatch({\n    type: LOADING_USER\n  }); //send req to upload image\n\n  axios.post('/user/image', formData).then(() => {\n    dispatch(getUserData());\n  }).catch(err => console.log(err));\n}; //func to edit user details\n\nexport const editUserDetails = userDetails => dispatch => {\n  //dispatch action of type\n  dispatch({\n    type: LOADING_USER\n  }); //send req to editUserDetails\n\n  axios.post('/user', userDetails).then(() => {\n    dispatch(getUserData());\n  }).catch(err => console.log(err));\n}; //func to setAuthorizationHeader\n\nconst setAuthorizationHeader = token => {\n  const FBIdToken = `Bearer ${token}`;\n  localStorage.setItem('FBIdToken', FBIdToken);\n  axios.defaults.headers.common['Authorization'] = FBIdToken;\n};","map":{"version":3,"sources":["/Users/Mama/Desktop/pizza-app/src/Redux/actions/userActions.js"],"names":["SET_USER","SET_ERRORS","CLEAR_ERRORS","LOADING_UI","SET_UNAUTHENTICATED","LOADING_USER","MARK_NOTIFICATIONS_READ","axios","loginUser","userData","history","dispatch","type","post","then","res","setAuthorizationHeader","data","token","getUserData","push","catch","err","payload","response","signupUser","newUserData","logoutUser","localStorage","removeItem","defaults","headers","common","get","console","log","uploadImage","formData","editUserDetails","userDetails","FBIdToken","setItem"],"mappings":"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","sourcesContent":["//import types of actions\nimport { SET_USER, SET_ERRORS, CLEAR_ERRORS, LOADING_UI, SET_UNAUTHENTICATED, LOADING_USER, MARK_NOTIFICATIONS_READ } from '../types';\nimport axios from 'axios';\n\n\n//func to loginUser\nexport const loginUser = (userData, history) => (dispatch) => {\n//dispatch loading, (send and action)\ndispatch({ type: LOADING_UI });\n\naxios\n    .post('/login', userData)\n    .then((res) => {\n    //if successful, set Auth Header\n    setAuthorizationHeader(res.data.token);\n    //getUser\n    dispatch(getUserData());\n\n    //clear any errors in form\n    dispatch({ type: CLEAR_ERRORS });\n\n    //redirect user to home page\n    history.push('/');\n    })\n    .catch((err) => {\n        //if errors, log error and set loading to false\n    dispatch({\n        type: SET_ERRORS,\n        payload: err.response.data\n    });\n    });\n};\n\n//func to signUp\nexport const signupUser = (newUserData, history) => (dispatch) => {\n    dispatch({ type: LOADING_UI });\n    axios\n      .post('/signup', newUserData)\n      .then((res) => {\n        //authorize user, passing the token\n        setAuthorizationHeader(res.data.token);\n        dispatch(getUserData());\n        dispatch({ type: CLEAR_ERRORS });\n        history.push('/');\n      })\n      .catch((err) => {\n        dispatch({\n          type: SET_ERRORS,\n          payload: err.response.data\n        });\n      });\n  };\n\n\n//func to logout\nexport const logoutUser = () => (dispatch) => {\n  //delete token\n  localStorage.removeItem('FBIdToken');\n  //delete header\n  delete axios.defaults.headers.common['Authorization'];\n  //set action to unauthenticated\n  dispatch({ type: SET_UNAUTHENTICATED });\n};\n\n\n//func to getUserData\nexport const getUserData = () => (dispatch) => {\n  //set action to loading\n  dispatch({ type: LOADING_USER });\n    //trigger axios\n    axios\n      .get('/user')\n      .then((res) => {\n      dispatch({\n          type: SET_USER,\n          //data sent to reducer\n          payload: res.data\n      });\n    })\n    .catch((err) => console.log(err));\n};\n\n//func to upload image\nexport const uploadImage = (formData) => (dispatch) => {\n  //dispatch action of type \n  dispatch({ type: LOADING_USER });\n  //send req to upload image\n  axios\n    .post('/user/image', formData)\n    .then(() => {\n      dispatch(getUserData());\n    })\n    .catch((err) => console.log(err));\n};\n\n//func to edit user details\nexport const editUserDetails = (userDetails) => (dispatch) => {\n  //dispatch action of type\n  dispatch({ type: LOADING_USER });\n  //send req to editUserDetails\n  axios\n    .post('/user', userDetails)\n    .then(() => {\n      dispatch(getUserData());\n    })\n    .catch((err) => console.log(err));\n};\n\n\n//func to setAuthorizationHeader\nconst setAuthorizationHeader = (token) => {\n    const FBIdToken = `Bearer ${token}`;\n    localStorage.setItem('FBIdToken', FBIdToken);\n    axios.defaults.headers.common['Authorization'] = FBIdToken;\n};"]},"metadata":{},"sourceType":"module"}