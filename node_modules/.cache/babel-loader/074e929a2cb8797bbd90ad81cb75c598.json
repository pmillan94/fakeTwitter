{"ast":null,"code":"var _jsxFileName = \"/Users/Mama/Desktop/pizza-app/src/Pages/login.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Icon from '../Images/no-img.png';\nimport { Link } from 'react-router-dom';\nimport themeObject from '../Util/theme'; //MUI Stuff\n\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from \"@material-ui/core/Button\";\nimport CircularProgress from '@material-ui/core/CircularProgress'; // Redux stuff\n\nimport { connect } from 'react-redux';\nimport { loginUser } from '../Redux/actions/userActions'; //import theme class from app.js page\n\nconst styles = {\n  form: themeObject.form,\n  logoImg: themeObject.image,\n  pageTitle: themeObject.pageTitle,\n  textField: themeObject.textField,\n  button: themeObject.button,\n  customError: themeObject.customError,\n  progress: themeObject.progress\n};\n\nclass Login extends Component {\n  //controled component\n  constructor() {\n    super();\n\n    this.handleSubmit = event => {\n      //prevent user from submitting empty values\n      event.preventDefault(); //Get data before submitting\n\n      const userData = {\n        email: this.state.email,\n        password: this.state.password\n      }; //call func loginUser to redirect, if successful\n\n      this.props.loginUser(userData, this.props.history);\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.state = {\n      email: '',\n      password: '',\n      errors: {}\n    };\n  } //func to recieve UI props and display errors at login, signup\n\n\n  componentWillReceiveProps(nextProps) {\n    //if we get errors, set state \n    if (nextProps.UI.errors) {\n      this.setState({\n        errors: nextProps.UI.errors\n      });\n    }\n  } //func to handle once user clicks submit\n\n\n  render() {\n    //import classes\n    const {\n      classes,\n      UI: {\n        loading\n      }\n    } = this.props;\n    const {\n      errors\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      className: classes.form,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      sm: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      sm: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: Icon,\n      alt: \"NewUser\",\n      className: classes.logoImg,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h2\",\n      className: classes.pageTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }\n    }, \"Login\"), /*#__PURE__*/React.createElement(\"form\", {\n      noValidate: true,\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"email\",\n      name: \"email\",\n      type: \"email\",\n      label: \"Email\",\n      className: classes.textField,\n      helperText: errors.email,\n      error: errors.email ? true : false,\n      value: this.state.email,\n      onChange: this.handleChange,\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      id: \"password\",\n      name: \"password\",\n      type: \"password\",\n      label: \"Password\",\n      className: classes.textField,\n      helperText: errors.password,\n      error: errors.password ? true : false,\n      value: this.state.password,\n      onChange: this.handleChange,\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 25\n      }\n    }), errors.general && /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h2\",\n      className: classes.customError,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 29\n      }\n    }, errors.general), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      variant: \"contained\",\n      color: \"primary\",\n      className: classes.button //Disable button when loading\n      ,\n      disabled: loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 25\n      }\n    }, \"Login\", loading && /*#__PURE__*/React.createElement(CircularProgress, {\n      size: 30,\n      className: classes.progress,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 34\n      }\n    }), /*#__PURE__*/React.createElement(\"small\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 39\n      }\n    }, \"Dont have an account? Sign up \", /*#__PURE__*/React.createElement(Link, {\n      to: \"/signup\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 76\n      }\n    }, \"here\")))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      sm: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }\n    }));\n  }\n\n} //import func and objects\n\n\nLogin.propTypes = {\n  classes: PropTypes.object.isRequired,\n  loginUser: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired,\n  UI: PropTypes.object.isRequired\n}; //func that looks at global state and take what it needs\n\nconst mapStateToProps = state => ({\n  user: state.user,\n  UI: state.UI\n}); //func that checks what actions are going to be used\n\n\nconst mapActionsToProps = {\n  loginUser\n}; //use connect to redirect states and props\n\nexport default connect(mapStateToProps, mapActionsToProps)(withStyles(styles)(Login));","map":{"version":3,"sources":["/Users/Mama/Desktop/pizza-app/src/Pages/login.js"],"names":["React","Component","PropTypes","Icon","Link","themeObject","withStyles","Grid","Typography","TextField","Button","CircularProgress","connect","loginUser","styles","form","logoImg","image","pageTitle","textField","button","customError","progress","Login","constructor","handleSubmit","event","preventDefault","userData","email","state","password","props","history","handleChange","setState","target","name","value","errors","componentWillReceiveProps","nextProps","UI","render","classes","loading","general","propTypes","object","isRequired","func","user","mapStateToProps","mapActionsToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Icon from '../Images/no-img.png';\nimport { Link } from 'react-router-dom';\nimport themeObject from '../Util/theme';\n\n//MUI Stuff\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from \"@material-ui/core/Button\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n// Redux stuff\nimport { connect } from 'react-redux';\nimport { loginUser } from '../Redux/actions/userActions';\n\n\n//import theme class from app.js page\nconst styles = {\n    form: themeObject.form,\n    logoImg: themeObject.image,\n    pageTitle: themeObject.pageTitle,\n    textField: themeObject.textField,\n    button: themeObject.button,\n    customError: themeObject.customError,\n    progress: themeObject.progress\n};\n\nclass Login extends Component {\n    //controled component\n    constructor() {\n        super();\n        this.state = {\n            email: '',\n            password: '',\n            errors: {}\n        };\n    }\n\n    //func to recieve UI props and display errors at login, signup\n    componentWillReceiveProps(nextProps) {\n        //if we get errors, set state \n        if (nextProps.UI.errors) {\n          this.setState({ errors: nextProps.UI.errors });\n        }\n    }\n\n\n    //func to handle once user clicks submit\n    handleSubmit = (event) => {\n        //prevent user from submitting empty values\n        event.preventDefault();\n\n        //Get data before submitting\n        const userData = {\n            email: this.state.email,\n            password: this.state.password\n        }\n\n        //call func loginUser to redirect, if successful\n        this.props.loginUser(userData, this.props.history);\n        \n    };\n\n    //func to handleChnage in Textfields and get user input\n    handleChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    };\n\n\n    render() {\n        //import classes\n        const { classes, UI: { loading }} = this.props;\n        const { errors } = this.state;\n\n        return (\n            <Grid container className={classes.form}>\n                <Grid item sm/>\n                <Grid item sm>\n                    <img src={Icon} alt=\"NewUser\" className={classes.logoImg}/>\n                    <Typography variant=\"h2\" className={classes.pageTitle}>Login</Typography>\n                    <form noValidate onSubmit={this.handleSubmit} >\n                        <TextField \n                            id=\"email\"\n                            name=\"email\"\n                            type=\"email\"\n                            label=\"Email\"\n                            className={classes.textField}\n                            helperText={errors.email}\n                            error={errors.email ? true : false}\n                            value={this.state.email}\n                            onChange={this.handleChange}\n                            fullWidth \n                        />\n                        <TextField \n                            id=\"password\" \n                            name=\"password\" \n                            type=\"password\" \n                            label=\"Password\" \n                            className={classes.textField}\n                            helperText={errors.password}\n                            error={errors.password ? true : false}\n                            value={this.state.password} \n                            onChange={this.handleChange} \n                            fullWidth \n                        />\n                        {errors.general && (\n                            <Typography variant=\"h2\" className={classes.customError}>\n                                {errors.general}\n                            </Typography>\n                        )}\n                        <Button \n                            type=\"submit\" \n                            variant=\"contained\" \n                            color=\"primary\" \n                            className={classes.button}\n                            //Disable button when loading\n                            disabled={loading}\n                        >\n                            Login\n                            {/* Will show a loading circle after user clicks login btn */}\n                            {loading && (\n                                <CircularProgress size={30} className={classes.progress}/>\n                            )}\n                        </Button>\n                            {/* Text that will redirect user to creat a new account(signup) */}\n                            <br/><br/><small>Dont have an account? Sign up <Link to=\"/signup\">here</Link></small>\n\n                    </form> \n                </Grid>\n                <Grid item sm/> \n            </Grid>\n        )\n    }\n}\n\n//import func and objects\nLogin.propTypes = {\n    classes: PropTypes.object.isRequired,\n    loginUser: PropTypes.func.isRequired,\n    user: PropTypes.object.isRequired,\n    UI: PropTypes.object.isRequired\n  };\n\n//func that looks at global state and take what it needs\nconst mapStateToProps = (state) => ({\n    user: state.user,\n    UI: state.UI\n});\n  \n//func that checks what actions are going to be used\nconst mapActionsToProps = {\n    loginUser\n};\n\n//use connect to redirect states and props\nexport default connect(mapStateToProps, mapActionsToProps)(withStyles(styles)(Login));"]},"metadata":{},"sourceType":"module"}