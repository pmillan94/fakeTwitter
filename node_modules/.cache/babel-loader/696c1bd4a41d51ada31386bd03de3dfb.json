{"ast":null,"code":"var _jsxFileName = \"/Users/Mama/Desktop/pizza-app/src/Components/Post/LikeButton.js\";\nimport React, { Component } from 'react';\nimport MyButton from '../../Util/MyButton';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types'; // Icons\n\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder'; // REdux\n\nimport { connect } from 'react-redux';\nimport { likeScream, unlikeScream } from '../../Redux/actions/dataActions';\nexport class LikeButton extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.likedScream = () => {\n      if (this.props.user.likes && this.props.user.likes.find( //find like, with the same screamId \n      like => like.screamId === this.props.screamId)) //if screamId is present in likes array,\n        return true; //else return false\n      else return false;\n    };\n\n    this.likeScream = () => {\n      this.props.likeScream(this.props.screamId);\n    };\n\n    this.unlikeScream = () => {\n      this.props.unlikeScream(this.props.screamId);\n    };\n  }\n\n  render() {\n    //import aunthenticated from props\n    const {\n      authenticated\n    } = this.props.user;\n    const likeButton = !authenticated ?\n    /*#__PURE__*/\n    //if not auth, link user to login page\n    React.createElement(Link, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(MyButton, {\n      tip: \"Like\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FavoriteBorder, {\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }\n    }))) //if auth and liked, then unlike post\n    : this.likedScream() ? /*#__PURE__*/React.createElement(MyButton, {\n      tip: \"Undo like\",\n      onClick: this.unlikeScream,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(FavoriteIcon, {\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    })) :\n    /*#__PURE__*/\n    //if auth and not liked, then like post\n    React.createElement(MyButton, {\n      tip: \"Like\",\n      onClick: this.likeScream,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(FavoriteBorder, {\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }));\n    return likeButton;\n  }\n\n}\nLikeButton.propTypes = {\n  user: PropTypes.object.isRequired,\n  screamId: PropTypes.string.isRequired,\n  likeScream: PropTypes.func.isRequired,\n  unlikeScream: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  user: state.user\n});\n\nconst mapActionsToProps = {\n  likeScream,\n  unlikeScream\n};\nexport default connect(mapStateToProps, mapActionsToProps)(LikeButton);","map":{"version":3,"sources":["/Users/Mama/Desktop/pizza-app/src/Components/Post/LikeButton.js"],"names":["React","Component","MyButton","Link","PropTypes","FavoriteIcon","FavoriteBorder","connect","likeScream","unlikeScream","LikeButton","likedScream","props","user","likes","find","like","screamId","render","authenticated","likeButton","propTypes","object","isRequired","string","func","mapStateToProps","state","mapActionsToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport MyButton from '../../Util/MyButton';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n// Icons\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\n// REdux\nimport { connect } from 'react-redux';\nimport { likeScream, unlikeScream } from '../../Redux/actions/dataActions';\n\nexport class LikeButton extends Component {\n\n   //check if likes array has this post from this user \n  likedScream = () => {\n    if ( this.props.user.likes && this.props.user.likes.find(\n        //find like, with the same screamId \n        (like) => like.screamId === this.props.screamId)\n    )\n        //if screamId is present in likes array,\n      return true;\n      //else return false\n    else return false;\n  };\n\n  //if likeScream func gets called, call likeScream func in props\n  likeScream = () => {\n    this.props.likeScream(this.props.screamId);\n  };\n\n\n  unlikeScream = () => {\n    this.props.unlikeScream(this.props.screamId);\n  };\n\n\n  render() {\n    //import aunthenticated from props\n    const { authenticated } = this.props.user;\n\n\n    const likeButton = !authenticated ? (\n        //if not auth, link user to login page\n      <Link to=\"/login\">\n        <MyButton tip=\"Like\">\n          <FavoriteBorder color=\"primary\" />\n        </MyButton>\n      </Link>\n\n      //if auth and liked, then unlike post\n    ) : this.likedScream() ? (\n      <MyButton tip=\"Undo like\" onClick={this.unlikeScream}>\n        <FavoriteIcon color=\"primary\" />\n      </MyButton>\n    ) : (\n    //if auth and not liked, then like post\n      <MyButton tip=\"Like\" onClick={this.likeScream}>\n        <FavoriteBorder color=\"primary\" />\n      </MyButton>\n    );\n    return likeButton;\n  }\n}\n\nLikeButton.propTypes = {\n  user: PropTypes.object.isRequired,\n  screamId: PropTypes.string.isRequired,\n  likeScream: PropTypes.func.isRequired,\n  unlikeScream: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.user\n});\n\nconst mapActionsToProps = {\n  likeScream,\n  unlikeScream\n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(LikeButton);"]},"metadata":{},"sourceType":"module"}