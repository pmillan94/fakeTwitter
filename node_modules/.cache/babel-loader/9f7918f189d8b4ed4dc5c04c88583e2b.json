{"ast":null,"code":"//import types\nimport { SET_ERRORS, CLEAR_ERRORS, LOADING_UI, STOP_LOADING_UI } from '../types'; //creat an object\n\nconst initialState = {\n  loading: false,\n  errors: null\n}; //func that handles state of object\n\nexport default function (state = initialState, action) {\n  //create switch to handle different actions depending on types called\n  switch (action.type) {\n    //if set_errors called \n    case SET_ERRORS:\n      return { ...state,\n        loading: false,\n        errors: action.payload\n      };\n\n    case CLEAR_ERRORS:\n      return { ...state,\n        loading: false,\n        errors: null\n      };\n\n    case LOADING_UI:\n      return { ...state,\n        loading: true\n      };\n\n    case STOP_LOADING_UI:\n      return { ...state,\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/Mama/Desktop/fakeTwitter/src/Redux/reducers/uiReducer.js"],"names":["SET_ERRORS","CLEAR_ERRORS","LOADING_UI","STOP_LOADING_UI","initialState","loading","errors","state","action","type","payload"],"mappings":"AAAA;AACA,SAASA,UAAT,EAAqBC,YAArB,EAAmCC,UAAnC,EAA+CC,eAA/C,QAAsE,UAAtE,C,CAEA;;AACE,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,KADU;AAEnBC,EAAAA,MAAM,EAAE;AAFW,CAArB,C,CAKA;;AACA,eAAe,UAASC,KAAK,GAAGH,YAAjB,EAA+BI,MAA/B,EAAuC;AACpD;AACA,UAAQA,MAAM,CAACC,IAAf;AACE;AACA,SAAKT,UAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELF,QAAAA,OAAO,EAAE,KAFJ;AAGLC,QAAAA,MAAM,EAAEE,MAAM,CAACE;AAHV,OAAP;;AAMF,SAAKT,YAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELF,QAAAA,OAAO,EAAE,KAFJ;AAGLC,QAAAA,MAAM,EAAE;AAHH,OAAP;;AAKF,SAAKJ,UAAL;AACE,aAAO,EACL,GAAGK,KADE;AAELF,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAIF,SAAKF,eAAL;AACE,aAAO,EACL,GAAGI,KADE;AAELF,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAIF;AACE,aAAOE,KAAP;AA1BJ;AA4BD","sourcesContent":["//import types\nimport { SET_ERRORS, CLEAR_ERRORS, LOADING_UI, STOP_LOADING_UI } from '../types';\n  \n//creat an object\n  const initialState = {\n    loading: false,\n    errors: null\n  };\n  \n  //func that handles state of object\n  export default function(state = initialState, action) {\n    //create switch to handle different actions depending on types called\n    switch (action.type) {\n      //if set_errors called \n      case SET_ERRORS:\n        return {\n          ...state,\n          loading: false,\n          errors: action.payload\n        };\n        \n      case CLEAR_ERRORS:\n        return {\n          ...state,\n          loading: false,\n          errors: null\n        };\n      case LOADING_UI:\n        return {\n          ...state,\n          loading: true\n        };\n      case STOP_LOADING_UI:\n        return {\n          ...state,\n          loading: false\n        };\n      default:\n        return state;\n    }\n  }"]},"metadata":{},"sourceType":"module"}